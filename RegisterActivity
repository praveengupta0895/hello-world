package com.praveen.gupta.firebase;

import android.content.Context;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class RegisterActivity extends AppCompatActivity {

    private final String TAG ="RegisterActivity";
    private FirebaseAuth mAuth;
    private FirebaseAuth.AuthStateListener mAuthListener;
    private Context mContext;
    private FirebaseMethods firebaseMethods;
    private String email,password,username;
    private EditText mEmail, mPassword, mUsername;
    private Button btnRegister;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);
        mContext = RegisterActivity.this;
        firebaseMethods = new FirebaseMethods(mContext);
        Log.d(TAG,"onCreate Started");

        initwidget();
        setupFirebaseAuth();
        init();
    }
    private void init()
    {
        btnRegister.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                email = mEmail.getText().toString();
                password = mPassword.getText().toString();
                username = mUsername.getText().toString();

                if(checkInputs(email,username,password));
                firebaseMethods.registerNewEmail(email,username,password);
            }
        });
    }

    private Boolean checkInputs(String email,String username,String password)
    {
        Log.d(TAG,"checkInputs:checking inputs for null values.");
        if(email.equals("")||username.equals("")||password.equals("")){
            Toast.makeText(getApplicationContext(),"All fields must be filled out",Toast.LENGTH_LONG).show();
            return false;
        }
        return true;
    }

    private void initwidget(){
        Log.d(TAG,"initwidget:Installing Widgets");
        mEmail = (EditText)findViewById(R.id.input_email);
        mUsername = (EditText)findViewById(R.id.input_username);
        btnRegister =(Button)findViewById(R.id.btn_register);
        mPassword =(EditText)findViewById(R.id.input_password);
        mContext = RegisterActivity.this;
    }


    private boolean isStringNull(String string)
    {
        Log.d(TAG, "isStringNull: checking string is null");
        if (string.equals(" ")){
            return true;
        }else {
            return false;
        }
    }

    private void setupFirebaseAuth(){
        Log.d(TAG,"setupFirebaseAuth:setting up firebase auth.");
        mAuth = FirebaseAuth.getInstance();
        mAuthListener = new FirebaseAuth.AuthStateListener() {
            @Override
            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
                FirebaseUser user = firebaseAuth.getCurrentUser();
                if(user != null)
                {
                    Log.d(TAG,"onAuthStateChanged:signed_in" + user.getUid());
                }
                else{
                    Log.d(TAG,"onAuthStateChanged:signed_out");
                }
            }
        };
    }
    @Override
    public void onStart() {
        super.onStart();
        // Check if user is signed in (non-null) and update UI accordingly.

        mAuth.addAuthStateListener(mAuthListener);
    }
    @Override
    public void onStop() {
        super.onStop();
        // Check if user is signed in (non-null) and update UI accordingly.
        if(mAuthListener!=null){
            mAuth.removeAuthStateListener(mAuthListener);
        }

    }
}
